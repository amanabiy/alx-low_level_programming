#include "hash_tables.h"

/**
 * hash_table_set - adds an element to the hash table
 * @ht: The hash table
 * @key: The key
 * @Value: The value
 * Return: 1 on success, other wise 0
 */
hash_node_t *create_item(char *key, char *value)
{
	hash_node_t *item = malloc(sizeof(hash_table_t));

	if (!item)
		return (0);

	item->key = (char*) malloc (strlen(key) + 1);
	item->value = (char*) malloc (strlen(value) + 1);

	strcpy(item->key, key);
	strcpy(item->value, value);

	

	if (current_array == NULL)
	{
		ht->current_array[index] = create_item(key, value);
		return (1);
	}

	while (current_array != NULL)
	{
		if (strcmp(current_array->key, key) == 0)
		{
			free(current_array->value);
			current_array->value = malloc(strlen(value)) + 1;
			strcpy(entry->value, value);
			return (1);
		}
		prev = current_array;
		current_array = prev->next;
	}

	prev->next = create_item(key, value);
	return (1);
}
